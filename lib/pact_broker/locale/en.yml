en:
  errors:
    not_blank?: "can't be blank"
    filled?: "can't be blank"
    valid_url?: "is not a valid URL eg. http://example.org"
    base64?: "is not valid Base64"
    single_line?: "cannot contain multiple lines"
    no_spaces?: "cannot contain spaces"
    none?: "cannot be provided"

  pact_broker:
    messages:
      response_body_hidden: For security purposes, the response details are not logged. To enable response logging, configure the webhook_host_whitelist property. See %{base_url}/doc/webhooks#whitelist for more information.
      index:
        title: Pacts
      dashboard:
        title: "%{consumer_name} / %{provider_name}"
      matrix:
        pre_verified: This pact was "pre-verified" as it has identical content to a previously verified pact.
      webhooks:
        parameters:
          pactbroker:
            consumerName: The consumer name
            providerName: The provider name
            consumerVersionNumber: The version number of the most recent consumer version associated with the pact content.
            providerVersionNumber: The provider version number for the verification result
            consumerVersionTags: The list of tag names for the most recent consumer version associated with the pact content, separated by ", "
            consumerVersionBranch: The repository branch associated with the consumer version
            providerVersionTags: The list of tag names for the provider version associated with the verification result, separated by ", ".
            providerVersionDescriptions: The descriptions of the provider version(s) for which the contract_requiring_verification_published webhook has been triggered. Only populated for the contract_requiring_verification_published event.
            providerVersionBranch: The repository branch associated with the provider version
            consumerLabels: The list of labels for the consumer associated with the pact content, separated by ", ".
            providerLabels: The list of labels for the provider associated with the pact content, separated by ", ".
            pactUrl: The "permalink" URL to the newly published pact content (using the pact version SHA).
            verificationResultUrl: The URL to the relevant verification result.
            githubVerificationStatus: The verification status using the correct keywords for posting to the Github commit status API. See https://developer.github.com/v3/repos/statuses
            bitbucketVerificationStatus: The verification status using the correct keywords for posting to the Bitbucket commit status API. See https://developer.atlassian.com/server/bitbucket/how-tos/updating-build-status-for-commits/
            azureDevOpsVerificationStatus: The verification status using the correct keywords for posting to the Azure DevOps GitStatusState API. See https://docs.microsoft.com/en-us/rest/api/azure/devops/git/statuses/create?view=azure-devops-rest-6.0
            gitlabVerificationStatus: The verification status using the correct keywords for posting to the Gitlab Commits API. See https://docs.gitlab.com/ee/api/commits.html#post-the-build-status-to-a-commit
            eventName: The name of the event that triggered the webhook
            buildUrl: The URL of the build that published the resources that have triggered the webhook (currently only supported for contracts published using the 'all in one' endpoint).
        no_webhooks_enabled_for_event: No enabled webhooks found for the detected events
        webhook_triggered_for_event: Webhook %{webhook_description} triggered for event %{event_name}.
        triggered_webhook_see_logs: View logs at %{url}
      version:
        created: "%{action} %{pacticipant_name} version %{pacticipant_version_number}"
        created_for_branch: "%{action} %{pacticipant_name} version %{pacticipant_version_number} with branch %{branch}"
        created_for_branch_with_tags: "%{action} %{pacticipant_name} version %{pacticipant_version_number} with branch %{branch} and tags %{tags}"
        created_with_tags: "%{action} %{pacticipant_name} version %{pacticipant_version_number} with tags %{tags}"
      contract:
        pact_published: Pact successfully published for %{consumer_name} version %{consumer_version_number} and provider %{provider_name}.
        same_pact_content_published: Pact successfully republished for %{consumer_name} version %{consumer_version_number} and provider %{provider_name} with no content changes.
        pact_modified_for_same_version: Pact with changed content published over existing content for %{consumer_name} version %{consumer_version_number} and provider %{provider_name}. This is not recommended in normal cicumstances and may indicate that you have not configured your Pact pipeline correctly. For more information see https://docs.pact.io/go/versioning
        pact_merged: Pact content merged with existing content for %{consumer_name} version %{consumer_version_number} and provider %{provider_name}.
      events:
        pact_published_unchanged_with_single_tag: pact content is the same as previous version with tag %{tag_name} and no new tags were applied
        pact_published_unchanged_with_multiple_tags: pact content is the same as previous versions with tags %{tag_names} and no new tags were applied
      next_steps:
        verifications: Add Pact verification tests to the %{provider_name} build. See https://docs.pact.io/go/provider_verification
        webhooks: Configure separate %{provider_name} pact verification build and webhook to trigger it when the pact content changes. See https://docs.pact.io/go/webhooks
        version_branch: Configure the version branch to be the value of your repository branch.
      branch:
        bulk_delete: "Scheduled deletion of %{count} branches for pacticipant %{pacticipant_name}. Remaining branches are: %{remaining}"
    errors:
      runtime:
        with_error_reference: "An error has occurred. The details have been logged with the reference %{error_reference}"
      validation:
        no_spaces: "cannot contain spaces"
        single_line: "cannot contain multiple lines"
        environment_not_found: "with name '%{value}' does not exist"
        blank: "cannot be blank"
        cannot_be_provided_at_same_time: "%{name_1} and %{name_2} cannot be provided at the same time"
        blank_with_name: "%{name} cannot be blank"
        attribute_missing: "Missing required attribute '%{attribute}'"
        invalid_http_method: "Invalid HTTP method '%{method}'"
        invalid_url: "Invalid URL '%{url}'. Expected format: http://example.org"
        pact_missing_pacticipant_name: "was not found at expected path $.%{pacticipant}.name in the submitted pact file."
        pact_content_modification_not_allowed: "Cannot change the content of the pact for %{consumer_name} version %{consumer_version_number} and provider %{provider_name}, as race conditions will cause unreliable results for can-i-deploy. Each pact must be published with a unique consumer version number. Some Pact libraries generate random data when a concrete value for a type matcher is not specified, and this can cause the contract to mutate - ensure you have given example values for all type matchers. For more information see https://docs.pact.io/go/versioning"
        consumer_version_number_missing: "Please specify the consumer version number by setting the X-Pact-Consumer-Version header."
        consumer_version_number_header_invalid: "X-Pact-Consumer-Version '%{consumer_version_number}' cannot be parsed to a version number. The expected format (unless this configuration has been overridden) is a semantic version. eg. 1.3.0 or 2.0.4.rc1"
        pacticipant_name_mismatch: "in pact ('%{name_in_pact}') does not match %{pacticipant} name in path ('%{name}')."
        consumer_name_in_contract_mismatch_pacticipant_name: "consumerName ('%{consumer_name_in_contract}') must match pacticipantName ('%{pacticipant_name}')"
        consumer_name_in_content_mismatch: "consumer name in contract content ('%{consumer_name_in_content}') must match consumerName in contract params ('%{consumer_name}')"
        provider_name_in_content_mismatch: "provider name in contract content ('%{provider_name_in_content}') must match providerName in contract params ('%{provider_name}')"
        connection_encoding_not_utf8: "The Sequel connection encoding (%{encoding}) is strongly recommended to be \"utf8\". If you need to set it to %{encoding} for some particular reason, then disable this check by setting config.validate_database_connection_config = false"
        invalid_webhook_uuid: The UUID can only contain the characters A-Z, a-z, 0-9, _ and -, and must be 16 or more characters.
        pacticipant_not_found: No pacticipant with name '%{name}' found
        environment_name_must_be_unique: "name '%{name}' is already used by an existing environment."
        must_specify_environment_or_tag: Must specify either an environment or a 'to' tag.
        cannot_specify_tag_and_environment: Cannot specify both a 'to' tag and an environment.
        cannot_specify_latest_and_environment: Cannot specify both latest=true and an environment.
        cannot_specify_more_than_one_destination_identifier: Cannot specify more than one of tag, environment and mainBranch.
        environment_with_name_not_found: "Environment with name '%{name}' does not exist"
        cannot_modify_version_branch: "The branch for a pacticipant version cannot be changed once set (currently '%{old_branch}', proposed value '%{new_branch}'). Your pact publication/verification publication configurations may be in conflict with each other if you are seeing this error. If the current branch value is incorrect, you must delete the pacticipant version resource at %{version_url} and publish the pacts/verification results again with a consistent branch name."
        invalid_content_for_content_type: "content could not be parsed as %{content_type}"
        invalid_parsed_contract_class: "parsed content was expected to be a Hash but was a %{actual_class}"
        cannot_set_currently_deployed_true: The currentlyDeployed property cannot be set back to true. Please record a new deployment.
        cannot_set_currently_supported_true: The currentlySupported property cannot be set back to true. Please record a new deployment.
        invalid_limit: The limit must be 1 or greater.
        pacts_for_verification_selector_fallback_tag: "fallbackTag can only be set if latest is true"
        pacts_for_verification_selector_matching_branch_requires_provider_version_branch: the providerVersionBranch must be specified when the selector matchingBranch=true is used
        pacts_for_verification_selector_tag_and_branch_disallowed: "cannot specify both a tag and a branch"
        pacts_for_verification_selector_fallback_tag_requires_tag: "a tag must be specified when a fallbackTag is specified"
        pacts_for_verification_selector_fallback_branch_requires_branch: "a branch must be specified when a fallbackBranch is specified"
        pacts_for_verification_selector_branch_and_latest_false_disallowed: cannot specify a branch with latest=false
        pacts_for_verification_selector_main_branch_and_latest_false_disallowed: cannot specify mainBranch=true with latest=false
        pacts_for_verification_selector_fallback_branch_and_latest_false_disallowed: fallbackBranch can only be set if latest is true
        pacts_for_verification_selector_required_params_missing: must specify a value for environment or tag or branch, or specify mainBranch=true, matchingBranch=true, latest=true, deployed=true, released=true or deployedOrReleased=true
        pacts_for_verification_selector_main_branch_with_other_param_disallowed: cannot specify mainBranch=true with any other criteria apart from consumer
        pacts_for_verification_selector_matching_branch_with_other_param_disallowed: cannot specify matchingBranch=true with any other criteria apart from consumer
        pacts_for_verification_selector_deployed_and_released_disallowed: cannot specify both deployed=true and released=true
        pacts_for_verification_selector_deployed_and_deployed_or_released_disallowed: cannot specify both deployed=true and deployedOrReleased=true
        pacts_for_verification_selector_released_and_deployed_or_released_disallowed: cannot specify both released=true and deployedOrReleased=true
        pacts_for_verification_selector_provider_version_branch_empty: when pending or WIP pacts are enabled and there are no tags provided, the provider version branch must not be an empty string, as it is used in the calculations for WIP/pending. A value must be provided (recommended), or it must not be set at all.
        pact_name_in_path_mismatch_name_in_pact: "name in pact '%{name_in_pact}' does not match name in URL path '%{name_in_path}'."
        base64: "is not valid Base64"
        non_utf_8_char_in_contract: "contract content has a non UTF-8 character at char %{char_number} and cannot be parsed as JSON. Fragment preceding invalid character is: '%{fragment}'"
        invalid_consumer_version_number: "Consumer version number '%{value}' cannot be parsed to a version number. The expected format (unless this configuration has been overridden) is a semantic version. eg. 1.3.0 or 2.0.4.rc1"
        invalid_version_number: "Version number '%{value}' cannot be parsed to a version number. The expected format (unless this configuration has been overridden) is a semantic version. eg. 1.3.0 or 2.0.4.rc1"
        invalid_url: "is not a valid URL eg. http://example.org"
        pacticipant_with_name_not_found: "does not match an existing pacticipant"
        invalid_http_method: "is not a recognised HTTP method"
        webhook_templated_host_not_allowed: "cannot have a template parameter in the host"
      duplicate_pacticipant: |
        This is the first time a pact has been published for "%{new_name}".
        The name "%{new_name}" is very similar to the following existing pacticipants:
        %{existing_names}
        If you meant to specify one of the above names, please correct the pact configuration, and re-publish the pact.
        If the pact is intended to be for a new consumer or provider, please manually create "%{new_name}" using the following command from the Pact Broker CLI, and then re-publish the pact:

        pact-broker create-or-update-pacticipant --name "%{new_name}" --broker-base-url %{base_url}

        For information on the Pact Broker CLI see https://docs.pact.io/go/pbc-cli
        To disable this check, set `check_for_potential_duplicate_pacticipant_names` to false in the configuration.
      new_line_in_url_path: URL path cannot contain a new line character.
      tab_in_url_path: URL path cannot contain a tab character.
      non_utf_8_char_in_request_body: "Request body has a non UTF-8 character at char %{char_number} and cannot be parsed as JSON. Fragment preceding invalid character is: '%{fragment}'"
      non_utf_8_char_in_contract: "Contract has a non UTF-8 character at char %{char_number} and cannot be parsed as JSON. Fragment preceding invalid character is: '%{fragment}'"

      "400":
        title: 400 Malformed Request
        message: The request was malformed and could not be processed.
      "404":
        title: 404 Not Found
        message: The requested document was not found on this server.
      "500":
        title: 500 Internal Server Error
        message: "The server encountered an error while processing this request: <pre>%{error}</pre>"
      "501":
        title: 501 Not Implemented
        message: "The server does not support the %{method} method."
      "503":
        title: 503 Service Unavailable
        message: The server is currently unable to handle the request due to a temporary overloading or maintenance of the server.
  # Used in distance_of_time_in_words(), distance_of_time_in_words_to_now(), time_ago_in_words()
  datetime:
    distance_in_words:
      half_a_minute: "half a minute"
      less_than_x_minutes:
        one: "less than 1 minute"
        other: "less than %{count} minutes"
      less_than_x_seconds:
        one:   "less than 1 second"
        other: "less than %{count} seconds"
      x_seconds:
        one:   "1 second"
        other: "%{count} seconds"
      less_than_x_minutes:
        one:   "less than a minute"
        other: "less than %{count} minutes"
      x_minutes:
        one:   "1 minute"
        other: "%{count} minutes"
      about_x_hours:
        one:   "about 1 hour"
        other: "about %{count} hours"
      x_days:
        one:   "1 day"
        other: "%{count} days"
      about_x_months:
        one:   "about 1 month"
        other: "about %{count} months"
      x_months:
        one:   "1 month"
        other: "%{count} months"
      about_x_years:
        one:   "about 1 year"
        other: "about %{count} years"
      over_x_years:
        one:   "over 1 year"
        other: "over %{count} years"
      almost_x_years:
        one:   "almost 1 year"
        other: "almost %{count} years"
