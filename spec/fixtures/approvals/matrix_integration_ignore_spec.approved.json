{
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider with a missing verification from a provider deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider with a missing verification from a provider without any ignore selectors deployment_status_summary is expected not to be deployable": {
    "deployable": null,
    "reasons": [
      "PactBroker::Matrix::PactNotEverVerifiedByProvider"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider with a failed verification from a provider deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider with a failed verification from a provider without any ignore selectors deployment_status_summary is expected not to be deployable": {
    "deployable": false,
    "reasons": [
      "PactBroker::Matrix::VerificationFailed"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider with a failed verification from a provider when ignoring the specific provider version deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider with a failed verification from a provider when ignoring a different specific provider version deployment_status_summary is expected not to be deployable": {
    "deployable": false,
    "reasons": [
      "PactBroker::Matrix::IgnoreSelectorDoesNotExist",
      "PactBroker::Matrix::VerificationFailed"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the provider has not been deployed deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the provider has not been deployed without any ignore selectors deployment_status_summary is expected not to be deployable": {
    "deployable": null,
    "reasons": [
      "PactBroker::Matrix::PactNotEverVerifiedByProvider"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the consumer and provider have been specified deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing",
      "PactBroker::Matrix::SelectorWithoutPacticipantVersionNumberSpecified"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the consumer and provider have been specified without any ignore selectors deployment_status_summary is expected not to be deployable": {
    "deployable": false,
    "reasons": [
      "PactBroker::Matrix::SelectorWithoutPacticipantVersionNumberSpecified",
      "PactBroker::Matrix::VerificationFailed"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the consumer and provider have been specified and the provider version specified does not exist deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing",
      "PactBroker::Matrix::SelectorWithoutPacticipantVersionNumberSpecified"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the consumer and provider have been specified and the provider version specified does not exist without any ignore selectors deployment_status_summary is expected not to be deployable": {
    "deployable": false,
    "reasons": [
      "PactBroker::Matrix::SelectorWithoutPacticipantVersionNumberSpecified",
      "PactBroker::Matrix::SpecifiedVersionDoesNotExist"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the provider to ignore does not exist includes a warning about the incorrect ignore selector": {
    "deployable": null,
    "reasons": [
      "PactBroker::Matrix::IgnoreSelectorDoesNotExist",
      "PactBroker::Matrix::PactNotEverVerifiedByProvider"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a consumer and ignoring a provider when the provider version to ignore does not exist includes a warning about the incorrect ignore selector": {
    "deployable": null,
    "reasons": [
      "PactBroker::Matrix::IgnoreSelectorDoesNotExist",
      "PactBroker::Matrix::PactNotEverVerifiedByProvider"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a provider and ignoring a consumer with a missing verification from a provider does not allows the provider to be deployed": {
    "deployable": null,
    "reasons": [
      "PactBroker::Matrix::PactNotEverVerifiedByProvider"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a provider and ignoring a consumer with a failed verification from a provider deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a provider and ignoring a consumer with a failed verification from a provider without any ignore selectors deployment_status_summary is expected not to be deployable": {
    "deployable": false,
    "reasons": [
      "PactBroker::Matrix::VerificationFailed"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a provider and ignoring a consumer with a failed verification from a provider when ignoring the specific consumer version deployment_status_summary is expected to be deployable": {
    "deployable": true,
    "reasons": [
      "PactBroker::Matrix::NoDependenciesMissing"
    ]
  },
  "PactBroker::Matrix::Service find when deploying a provider and ignoring a consumer with a failed verification from a provider when ignoring the wrong specific consumer version deployment_status_summary is expected not to be deployable": {
    "deployable": false,
    "reasons": [
      "PactBroker::Matrix::IgnoreSelectorDoesNotExist",
      "PactBroker::Matrix::VerificationFailed"
    ]
  }
}
